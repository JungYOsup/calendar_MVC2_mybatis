<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- xml는 처음에 다 읽고 시작해서 쿼리가 하나 고장나면 다른것도 안된다 
그리고 *****원래는 파라미터를 받아올때 객체로 받아온다. 즉 Dao에서도 int나 이러한 기본타입으로 전달해주는게 아니라 Map같은 객체로 전달해줘야한다.
그런데 int로 보내고 int로 받는게 됬는데? 그거는 특수한 경우이다.-->

<mapper namespace="com.hk.calboard">
	
	
	<!--**우리가 mybatis에서는 예를들어 쿼리에서 사용하는 #{id} ,dto의 맴버필드의 id가 같아함
	만약 dto의 맴버필드에 ids라고 되어있으면 쿼리에서 사용하는 것도 #{ids},그래야지 알아서 처리해줌(순서는달라도됨) 
		만약 데이터 칼럼명이 SEQ고  dto에 맴버필드가 seqs라고 되어있을경우 mybatis에서 제대로된 기능을 해줄수가 없다
		그렇기에   resultMap을 통해서  칼럼명 SEQ와 맴버필드 seqs가 같다고 설정해주는것이라고 설정해주는것이다.-->
	
	<!--여기서는 맴퍼빌드랑 칼럼명이 같은데도 써준이유는 그냥 설명해주기 위해서,칼럼명과 맴버필드의 이름이 다를경우에 resultMap을 해준다. -->
	<resultMap type="com.hk.caldtos.CalDto" id="CalDtoMap">
		
		<result property="seq" column="SEQ"/> <!--property="dto의 맴버필드 " column="실제테이블에 칼럼명들" -->
		<result property="id" column="ID"/>
		<result property="title" column="TITLE"/>
		<result property="content" column="CONTENT"/>
		<result property="mDate" column="MDATE"/>
		<result property="regDate" column="REGDATE"/>
		
	</resultMap>
	
	<!--목록조회  -->
	<!--parameterMap은 쓰지 않는다. , resultMap="resultMap의 id"를 설정해줌으로써 칼럼명 SEQ와 맴버필드 seqs가 같다고 인지하게 되는것이다.  
	여기서는 맴퍼빌드랑 칼럼명이 같기떄문에 쓸필요는 없지만 만약 다를 경우 resultMap으로 해주고 여기에 설정해주는것이다
	그리고  CalDtoMap 가 즉 type="com.hk.caldtos.CalDto" 이므로 dto타입이다.
	즉 resultMap을 쓰게 되면 첫째 맴버필드의 이름과 칼럼의 이름이 달라도 상관없게 해주고 , 둘째 쿼리의 결과값의 타입을
	위에서 지정해준 type("com.hk.caldtos.CalDto")으로 해준다 -->
	
	<select id="callist" resultMap="CalDtoMap" parameterType="Map">
		SELECT SEQ,ID,TITLE,CONTENT,MDATE,REGDATE FROM CALBOARD WHERE ID=#{id} AND SUBSTR(MDATE,1,8)=#{yyyyMMdd}
	</select><!--SUBSTR(MDATE에서 길이 1부터 8까지 자름) 왜 잘랐을까? MDATE는 12자리이기때문에 비교하기 위해 8자리로 자름 -->
	
	<!--일정추가-->
	<insert id="insertboard" parameterType="calDto">
	
		INSERT INTO CALBOARD (SEQ,ID,TITLE,CONTENT,MDATE,REGDATE) VALUES(CALBOARD_SEQ.NEXTVAL,#{id},#{title},#{content},#{mDate},SYSDATE)
	</insert>
	
	<!--상세조회  -->
	
	<select id="caldetail" resultMap="CalDtoMap" parameterType="Map">
		SELECT SEQ,ID,TITLE,CONTENT,MDATE,REGDATE FROM CALBOARD WHERE SEQ=#{seq}
	</select>
	
	<!--일정수정하기(update문)  -->
	<update id="calupdate" parameterType="calDto">
		UPDATE CALBOARD SET TITLE=#{title},CONTENT=#{content},MDATE=#{mDate}, REGDATE=SYSDATE WHERE SEQ =#{seq}
	</update>
	
	<!--일정삭제하기(delete문)  -->
	<delete id="calMuldel" parameterType="Map">
		DELETE FROM CALBOARD WHERE SEQ IN
		<foreach collection="seqs" item="seq" open="(" close=")" separator=",">
			#{seq}
		</foreach>
		<!--collection은 받은 배열의 키, <foreach>는 받은 키의 value의 길이만큼 반복한다(향상된for문처럼). item=변수 , 즉 키에담겨있는 value값을 담는 변수 
		, open=(처음시작을 "(" 로 하고) close=(닫을때는 ")"로 닫겠다) , 그리고 분리는 , 로 시키겠다. -->
	
	</delete>
	<!--게시물을 칼렌더에 표현  -->
	<select id="calViewList" parameterType="Map" resultMap="CalDtoMap">
	SELECT SEQ,ID,TITLE,CONTENT,MDATE,REGDATE FROM
	(
		SELECT (ROW_NUMBER() OVER(PARTITION BY SUBSTR(MDATE,1,8) ORDER BY MDATE)) AS RN, 
		SEQ,ID,TITLE,CONTENT,MDATE,REGDATE FROM CALBOARD WHERE ID=#{id} AND SUBSTR(MDATE,1,6)=#{yyyyMM}
	) WHERE RN BETWEEN 1 AND 3
	
	</select>
	<!--게시물의 갯수 표현 -->
	<select id="calCount" parameterType="Map" resultType="Integer">
		SELECT COUNT(*) FROM CALBOARD WHERE ID=#{id} AND SUBSTR(MDATE,1,8)=#{yyyyMMdd}
	
	</select>
	
	
	
</mapper>
